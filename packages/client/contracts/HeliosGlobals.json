{
  "address": "0x0b817045bb15F58dE938E5Cf7E3a79c1C08fa436",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_hls",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_globalAdmin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "balancerPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "BalancerPoolSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "CollateralAssetSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGlobalAdmin",
          "type": "address"
        }
      ],
      "name": "GlobalAdminSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "which",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "GlobalsAddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "which",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GlobalsParamSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        }
      ],
      "name": "GovernorAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "LiquidityAssetSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "OracleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pendingGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "PoolDelegateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "pause",
          "type": "bool"
        }
      ],
      "name": "ProtocolPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "exemptedContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "TransferRestrictionExemptionSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultGracePeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "defaultUniswapPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLpCooldownParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "globalAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "heliosTreasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hls",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investorFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isValidBalancerPool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "calc",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "calcType",
          "type": "uint8"
        }
      ],
      "name": "isValidCalc",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isValidCollateralAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isValidLiquidityAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isValidLoanFactory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isValidPoolDelegate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isValidPoolFactory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "superFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "subFactory",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "factoryType",
          "type": "uint8"
        }
      ],
      "name": "isValidSubFactory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpCooldownPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpWithdrawWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSwapSlippage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minLoanEquity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "oracleFor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "calc",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "setCalc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "setCollateralAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultGracePeriod",
          "type": "uint256"
        }
      ],
      "name": "setDefaultGracePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "mid",
          "type": "address"
        }
      ],
      "name": "setDefaultUniswapPath",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingPeriod",
          "type": "uint256"
        }
      ],
      "name": "setFundingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGlobalAdmin",
          "type": "address"
        }
      ],
      "name": "setGlobalAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_heliosTreasury",
          "type": "address"
        }
      ],
      "name": "setHeliosTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setInvestorFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "setLiquidityAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCooldownPeriod",
          "type": "uint256"
        }
      ],
      "name": "setLpCooldownPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLpWithdrawWindow",
          "type": "uint256"
        }
      ],
      "name": "setLpWithdrawWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxSlippage",
          "type": "uint256"
        }
      ],
      "name": "setMaxSwapSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minLoanEquity",
          "type": "uint256"
        }
      ],
      "name": "setMinLoanEquity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernor",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "setPoolDelegateAllowlist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "pause",
          "type": "bool"
        }
      ],
      "name": "setProtocolPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCooldownPeriod",
          "type": "uint256"
        }
      ],
      "name": "setStakerCooldownPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newUnstakeWindow",
          "type": "uint256"
        }
      ],
      "name": "setStakerUnstakeWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "setSwapOutRequired",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setTreasuryFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "balancerPool",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "setValidBalancerPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "loanFactory",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "setValidLoanFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolFactory",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "setValidPoolFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "superFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "subFactory",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "setValidSubFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakerCooldownPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakerUnstakeWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapOutRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validCalcs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validSubFactories",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd5d7084c1211e611077841994a9829512addbad048522a3ba3749b83a89f90ad",
  "receipt": {
    "to": null,
    "from": "0xA744263c6f294db52c4b3b416BA5c1800f66BDBa",
    "contractAddress": "0x0b817045bb15F58dE938E5Cf7E3a79c1C08fa436",
    "transactionIndex": 10,
    "gasUsed": "1995466",
    "logsBloom": "0x
    "blockHash": "0x1a8c66166990fb46ce406bbc05a75dc50b8131c213625eead6af0558eddfdbcc",
    "transactionHash": "0xd5d7084c1211e611077841994a9829512addbad048522a3ba3749b83a89f90ad",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 26161884,
        "transactionHash": "0xd5d7084c1211e611077841994a9829512addbad048522a3ba3749b83a89f90ad",
        "address": "0x0b817045bb15F58dE938E5Cf7E3a79c1C08fa436",
        "topics": [
          "0x5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c8"
        ],
        "data": "0x",
        "logIndex": 120,
        "blockHash": "0x1a8c66166990fb46ce406bbc05a75dc50b8131c213625eead6af0558eddfdbcc"
      },
      {
        "transactionIndex": 10,
        "blockNumber": 26161884,
        "transactionHash": "0xd5d7084c1211e611077841994a9829512addbad048522a3ba3749b83a89f90ad",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a744263c6f294db52c4b3b416ba5c1800f66bdba",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000008dc950a847fbbe00000000000000000000000000000000000000000000000044ed006a281211b900000000000000000000000000000000000000000000144a82e8984473b77243000000000000000000000000000000000000000000000000445f37197fca15fb00000000000000000000000000000000000000000000144a837661951bff6e01",
        "logIndex": 121,
        "blockHash": "0x1a8c66166990fb46ce406bbc05a75dc50b8131c213625eead6af0558eddfdbcc"
      }
    ],
    "blockNumber": 26161884,
    "cumulativeGasUsed": "4061389",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA744263c6f294db52c4b3b416BA5c1800f66BDBa",
    "0x0b932e28000A132fd25A36795f4Fd5F4557693DA",
    "0xA744263c6f294db52c4b3b416BA5c1800f66BDBa"
  ],
  "numDeployments": 1,
  "solcInputHash": "dffa7e128f2b675162a5be10778a0091",
  "metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hls\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_globalAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"balancerPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"BalancerPoolSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"CollateralAssetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGlobalAdmin\",\"type\":\"address\"}],\"name\":\"GlobalAdminSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"which\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"GlobalsAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"which\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"GlobalsParamSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"}],\"name\":\"GovernorAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"LiquidityAssetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"OracleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"PoolDelegateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"ProtocolPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptedContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"TransferRestrictionExemptionSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultGracePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"defaultUniswapPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLpCooldownParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"heliosTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hls\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investorFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidBalancerPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"calc\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"calcType\",\"type\":\"uint8\"}],\"name\":\"isValidCalc\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidCollateralAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidLiquidityAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidLoanFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidPoolDelegate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidPoolFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"superFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"subFactory\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"factoryType\",\"type\":\"uint8\"}],\"name\":\"isValidSubFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpCooldownPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpWithdrawWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSwapSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLoanEquity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracleFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"calc\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"setCalc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"setCollateralAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultGracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultGracePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mid\",\"type\":\"address\"}],\"name\":\"setDefaultUniswapPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingPeriod\",\"type\":\"uint256\"}],\"name\":\"setFundingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGlobalAdmin\",\"type\":\"address\"}],\"name\":\"setGlobalAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_heliosTreasury\",\"type\":\"address\"}],\"name\":\"setHeliosTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setInvestorFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"setLiquidityAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCooldownPeriod\",\"type\":\"uint256\"}],\"name\":\"setLpCooldownPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLpWithdrawWindow\",\"type\":\"uint256\"}],\"name\":\"setLpWithdrawWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxSlippage\",\"type\":\"uint256\"}],\"name\":\"setMaxSwapSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minLoanEquity\",\"type\":\"uint256\"}],\"name\":\"setMinLoanEquity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pendingGovernor\",\"type\":\"address\"}],\"name\":\"setPendingGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"setPoolDelegateAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setProtocolPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCooldownPeriod\",\"type\":\"uint256\"}],\"name\":\"setStakerCooldownPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newUnstakeWindow\",\"type\":\"uint256\"}],\"name\":\"setStakerUnstakeWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"setSwapOutRequired\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setTreasuryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"balancerPool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"setValidBalancerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"loanFactory\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"setValidLoanFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"setValidPoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"superFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"subFactory\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"setValidSubFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerCooldownPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerUnstakeWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapOutRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validCalcs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validSubFactories\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptGovernor()\":{\"details\":\"Accept the Governor position. Only the Pending Governor can call this function.It emits a `GovernorAccepted` event.\"},\"constructor\":{\"details\":\"Constructor function.It emits an `Initialized` event.\",\"params\":{\"_globalAdmin\":\"Address the Global Admin.\",\"_governor\":\"Address of Governor.\",\"_hls\":\"Address of the ERC-2222 Helios Token for the Helios protocol.\"}},\"getLatestPrice(address)\":{\"details\":\"Fetch price for asset from Chainlink oracles.\",\"params\":{\"asset\":\"Asset to fetch price of.\"},\"returns\":{\"_0\":\"Price of asset in USD.\"}},\"getLpCooldownParams()\":{\"details\":\"Returns the `lpCooldownPeriod` and `lpWithdrawWindow` as a tuple, for convenience.\",\"returns\":{\"_0\":\"[0] = lpCooldownPeriod [1] = lpWithdrawWindow\"}},\"isValidCalc(address,uint8)\":{\"details\":\"Checks that a Calculator is valid.\",\"params\":{\"calc\":\"Calculator address.\",\"calcType\":\"Calculator type.\"}},\"isValidSubFactory(address,address,uint8)\":{\"details\":\"Checks that a subFactory is valid as it relates to a super factory.\",\"params\":{\"factoryType\":\"The type expected for the subFactory. References listed below. 0 = COLLATERAL_LOCKER_FACTORY 1 = DEBT_LOCKER_FACTORY 2 = FUNDING_LOCKER_FACTORY 3 = LIQUIDITY_LOCKER_FACTORY 4 = STAKE_LOCKER_FACTORY\",\"subFactory\":\"The sub factory used by core factory (e.g. LiquidityLockerFactory).\",\"superFactory\":\"The core factory (e.g. PoolFactory, LoanFactory).\"}},\"setCalc(address,bool)\":{\"details\":\"Sets the validity of a calculator contract. Only the Governor can call this function.\",\"params\":{\"calc\":\"Calculator address.\",\"valid\":\"The new validity status of a Calculator.\"}},\"setCollateralAsset(address,bool)\":{\"details\":\"Sets the validity of an asset for collateral. Only the Governor can call this function.It emits a `CollateralAssetSet` event.\",\"params\":{\"asset\":\"The asset to assign validity to.\",\"valid\":\"The new validity status of a Collateral Asset.\"}},\"setDefaultGracePeriod(uint256)\":{\"details\":\"Sets the default grace period. Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"_defaultGracePeriod\":\"Number of seconds to set the grace period to.\"}},\"setDefaultUniswapPath(address,address,address)\":{\"details\":\"Sets the path to swap an asset through Uniswap. Only the Governor can call this function.\",\"params\":{\"from\":\"Asset being swapped.\",\"mid\":\"Middle asset.** Set to == mid to enable a bilateral swap (single path swap). Set to != mid to enable a triangular swap (multi path swap).\",\"to\":\"Final asset to receive. **\"}},\"setFundingPeriod(uint256)\":{\"details\":\"Sets the funding period. Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"_fundingPeriod\":\"Number of seconds to set the drawdown grace period to.\"}},\"setGlobalAdmin(address)\":{\"details\":\"Sets the Global Admin. Only the Governor can call this function.It emits a `GlobalAdminSet` event.\",\"params\":{\"newGlobalAdmin\":\"New global admin address.\"}},\"setHeliosTreasury(address)\":{\"details\":\"Sets the HeliosTreasury. Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"_heliosTreasury\":\"New HeliosTreasury address.\"}},\"setInvestorFee(uint256)\":{\"details\":\"Sets the investor fee (in basis points). Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"_fee\":\"The fee, e.g., 50 = 0.50%.\"}},\"setLiquidityAsset(address,bool)\":{\"details\":\"Sets the validity of an asset for liquidity in Pools. Only the Governor can call this function.It emits a `LiquidityAssetSet` event.\",\"params\":{\"asset\":\"Address of the valid asset.\",\"valid\":\"The new validity status a Liquidity Asset in Pools.\"}},\"setLpCooldownPeriod(uint256)\":{\"details\":\"Sets the Liquidity Pool cooldown period. This change will affect the existing cool down period for the LPs that already intended to withdraw. Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"newCooldownPeriod\":\"New value for the cool down period.\"}},\"setLpWithdrawWindow(uint256)\":{\"details\":\"Sets the Liquidity Pool withdraw window. This change will affect the existing window for the LPs that already intended to withdraw. Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"newLpWithdrawWindow\":\"New value for the withdraw window.\"}},\"setMaxSwapSlippage(uint256)\":{\"details\":\"Sets the allowed Uniswap slippage percentage, in basis points. Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"newMaxSlippage\":\"New max slippage percentage (in basis points)\"}},\"setMinLoanEquity(uint256)\":{\"details\":\"Sets the minimum Loan equity. Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"_minLoanEquity\":\"Min percentage of Loan equity an account must have to trigger liquidations.\"}},\"setPendingGovernor(address)\":{\"details\":\"Sets a new Pending Governor. This address can become Governor if they accept. Only the Governor can call this function.It emits a `PendingGovernorSet` event.\",\"params\":{\"_pendingGovernor\":\"Address of new Pending Governor.\"}},\"setPoolDelegateAllowlist(address,bool)\":{\"details\":\"Sets the validity of a Pool Delegate (those allowed to create Pools). Only the Governor can call this function.It emits a `PoolDelegateSet` event.\",\"params\":{\"delegate\":\"Address to manage permissions for.\",\"valid\":\"The new validity status of a Pool Delegate.\"}},\"setPriceOracle(address,address)\":{\"details\":\"Sets a price feed's oracle. Only the Governor can call this function.It emits a `OracleSet` event.\",\"params\":{\"asset\":\"Asset to update price for.\",\"oracle\":\"New oracle to use.\"}},\"setProtocolPause(bool)\":{\"details\":\"Sets the paused/unpaused state of the protocol. Only the Global Admin can call this function.It emits a `ProtocolPaused` event.\",\"params\":{\"pause\":\"Boolean flag to switch externally facing functionality in the protocol on/off.\"}},\"setStakerCooldownPeriod(uint256)\":{\"details\":\"Sets the Staker cooldown period. This change will affect the existing cool down period for the Stakers that already intended to unstake. Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"newCooldownPeriod\":\"New value for the cool down period.\"}},\"setStakerUnstakeWindow(uint256)\":{\"details\":\"Sets the Staker unstake window. This change will affect the existing window for the Stakers that already intended to unstake. Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"newUnstakeWindow\":\"New value for the unstake window.\"}},\"setSwapOutRequired(uint256)\":{\"details\":\"Sets the the minimum Pool cover required to finalize a Pool. Only the Governor can call this function. FIXIt emits a `GlobalsParamSet` event.\",\"params\":{\"amt\":\"The new minimum swap out required.\"}},\"setTreasuryFee(uint256)\":{\"details\":\"Sets the treasury fee (in basis points). Only the Governor can call this function.It emits a `GlobalsParamSet` event.\",\"params\":{\"_fee\":\"The fee, e.g., 50 = 0.50%.\"}},\"setValidBalancerPool(address,bool)\":{\"details\":\"Sets the validity of a Balancer Pool. Only the Governor can call this function.It emits a `BalancerPoolSet` event.\",\"params\":{\"balancerPool\":\"Address of Balancer Pool contract.\",\"valid\":\"The new validity status of a Balancer Pool.\"}},\"setValidLoanFactory(address,bool)\":{\"details\":\"Sets the validity of a LoanFactory. Only the Governor can call this function.\",\"params\":{\"loanFactory\":\"Address of LoanFactory.\",\"valid\":\"The new validity status of a LoanFactory.\"}},\"setValidPoolFactory(address,bool)\":{\"details\":\"Sets the validity of a PoolFactory. Only the Governor can call this function.\",\"params\":{\"poolFactory\":\"Address of PoolFactory.\",\"valid\":\"The new validity status of a PoolFactory.\"}},\"setValidSubFactory(address,address,bool)\":{\"details\":\"Sets the validity of a sub factory as it relates to a super factory. Only the Governor can call this function.\",\"params\":{\"subFactory\":\"The sub factory used by core factory (e.g. LiquidityLockerFactory).\",\"superFactory\":\"The core factory (e.g. PoolFactory, LoanFactory).\",\"valid\":\"The new validity status of a subFactory within context of super factory.\"}}},\"title\":\"HeliosGlobals maintains a central source of parameters and allowlists for the Helios protocol.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/protocol/contracts/HeliosGlobals.sol\":\"HeliosGlobals\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"packages/protocol/contracts/HeliosGlobals.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity 0.6.11;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\nimport \\\"./interfaces/IERC20Details.sol\\\";\\nimport \\\"./interfaces/IOracle.sol\\\";\\nimport \\\"./interfaces/ISubFactory.sol\\\";\\n\\ninterface ICalc { function calcType() external view returns (uint8); }\\n\\n/// @title HeliosGlobals maintains a central source of parameters and allowlists for the Helios protocol.\\ncontract HeliosGlobals {\\n\\n    using SafeMath for uint256;\\n\\n    address public immutable hls;         // The ERC-2222 Helios Token for the Helios protocol.\\n\\n    address public pendingGovernor;       // The Governor that is declared for governorship transfer. Must be accepted for transfer to take effect.\\n    address public governor;              // The Governor responsible for management of global Helios variables.\\n    address public heliosTreasury;         // The HeliosTreasury is the Treasury where all fees pass through for conversion, prior to distribution.\\n    address public globalAdmin;           // The Global Admin of the whole network. Has the power to switch off/on the functionality of entire protocol.\\n\\n    uint256 public defaultGracePeriod;    // Represents the amount of time a Borrower has to make a missed payment before a default can be triggered.\\n    uint256 public swapOutRequired;       // Represents minimum amount of Pool cover that a Pool Delegate has to provide before they can finalize a Pool.\\n    uint256 public fundingPeriod;         // Amount of time to allow a Borrower to drawdown on their Loan after funding period ends.\\n    uint256 public investorFee;           // Portion of drawdown that goes to the Pool Delegates and individual Lenders.\\n    uint256 public treasuryFee;           // Portion of drawdown that goes to the HeliosTreasury.\\n    uint256 public maxSwapSlippage;       // Maximum amount of slippage for Uniswap transactions.\\n    uint256 public minLoanEquity;         // Minimum amount of LoanFDTs required to trigger liquidations (basis points percentage of totalSupply).\\n    uint256 public stakerCooldownPeriod;  // Period (in secs) after which Stakers are allowed to unstake  their BPTs  from a StakeLocker.\\n    uint256 public lpCooldownPeriod;      // Period (in secs) after which LPs     are allowed to withdraw their funds from a Pool.\\n    uint256 public stakerUnstakeWindow;   // Window of time (in secs) after `stakerCooldownPeriod` that an account has to withdraw before their intent to unstake  is invalidated.\\n    uint256 public lpWithdrawWindow;      // Window of time (in secs) after `lpCooldownPeriod`     that an account has to withdraw before their intent to withdraw is invalidated.\\n\\n    bool public protocolPaused;  // Switch to pause the functionality of the entire protocol.\\n\\n    mapping(address => bool) public isValidLiquidityAsset;            // Mapping of valid Liquidity Assets.\\n    mapping(address => bool) public isValidCollateralAsset;           // Mapping of valid Collateral Assets.\\n    mapping(address => bool) public validCalcs;                       // Mapping of valid Calculators\\n    mapping(address => bool) public isValidPoolDelegate;              // Mapping of valid Pool Delegates (prevent unauthorized/unknown addresses from creating Pools).\\n    mapping(address => bool) public isValidBalancerPool;              // Mapping of valid Balancer Pools that Helios has approved for BPT staking.\\n\\n    // Determines the liquidation path of various assets in Loans and the Treasury.\\n    // The value provided will determine whether or not to perform a bilateral or triangular swap on Uniswap.\\n    // For example, `defaultUniswapPath[WBTC][USDC]` value would indicate what asset to convert WBTC into before conversion to USDC.\\n    // If `defaultUniswapPath[WBTC][USDC] == USDC`, then the swap is bilateral and no middle asset is swapped.\\n    // If `defaultUniswapPath[WBTC][USDC] == WETH`, then swap WBTC for WETH, then WETH for USDC.\\n    mapping(address => mapping(address => address)) public defaultUniswapPath;\\n\\n    mapping(address => address) public oracleFor;  // Chainlink oracle for a given asset.\\n\\n    mapping(address => bool)                     public isValidPoolFactory;  // Mapping of valid Pool Factories.\\n    mapping(address => bool)                     public isValidLoanFactory;  // Mapping of valid Loan Factories.\\n    mapping(address => mapping(address => bool)) public validSubFactories;   // Mapping of valid sub factories.\\n\\n    event                     Initialized();\\n    event              CollateralAssetSet(address asset, uint256 decimals, string symbol, bool valid);\\n    event               LiquidityAssetSet(address asset, uint256 decimals, string symbol, bool valid);\\n    event                       OracleSet(address asset, address oracle);\\n    event TransferRestrictionExemptionSet(address indexed exemptedContract, bool valid);\\n    event                 BalancerPoolSet(address balancerPool, bool valid);\\n    event              PendingGovernorSet(address indexed pendingGovernor);\\n    event                GovernorAccepted(address indexed governor);\\n    event                 GlobalsParamSet(bytes32 indexed which, uint256 value);\\n    event               GlobalsAddressSet(bytes32 indexed which, address addr);\\n    event                  ProtocolPaused(bool pause);\\n    event                  GlobalAdminSet(address indexed newGlobalAdmin);\\n    event                 PoolDelegateSet(address indexed delegate, bool valid);\\n\\n    /**\\n        @dev Checks that `msg.sender` is the Governor.\\n    */\\n    modifier isGovernor() {\\n        require(msg.sender == governor, \\\"MG:NOT_GOV\\\");\\n        _;\\n    }\\n\\n    /**\\n        @dev   Constructor function.\\n        @dev   It emits an `Initialized` event.\\n        @param _governor    Address of Governor.\\n        @param _hls         Address of the ERC-2222 Helios Token for the Helios protocol.\\n        @param _globalAdmin Address the Global Admin.\\n    */\\n    constructor(address _governor, address _hls, address _globalAdmin) public {\\n        governor             = _governor;\\n        hls                  = _hls;\\n        swapOutRequired      = 0;          // $0 of Pool cover; was $10,000\\n        fundingPeriod        = 10 days;\\n        defaultGracePeriod   = 5 days;\\n        investorFee          = 50;         // 0.5 %\\n        treasuryFee          = 50;         // 0.5 %\\n        maxSwapSlippage      = 1000;       // 10 %\\n        minLoanEquity        = 2000;       // 20 %\\n        globalAdmin          = _globalAdmin;\\n        stakerCooldownPeriod = 10 days;\\n        lpCooldownPeriod     = 10 days;\\n        stakerUnstakeWindow  = 2 days;\\n        lpWithdrawWindow     = 2 days;\\n        emit Initialized();\\n    }\\n\\n    /************************/\\n    /*** Setter Functions ***/\\n    /************************/\\n\\n    /**\\n        @dev  Sets the Staker cooldown period. This change will affect the existing cool down period for the Stakers that already intended to unstake.\\n              Only the Governor can call this function.\\n        @dev  It emits a `GlobalsParamSet` event.\\n        @param newCooldownPeriod New value for the cool down period.\\n    */\\n    function setStakerCooldownPeriod(uint256 newCooldownPeriod) external isGovernor {\\n        stakerCooldownPeriod = newCooldownPeriod;\\n        emit GlobalsParamSet(\\\"STAKER_COOLDOWN_PERIOD\\\", newCooldownPeriod);\\n    }\\n\\n    /**\\n        @dev   Sets the Liquidity Pool cooldown period. This change will affect the existing cool down period for the LPs that already intended to withdraw.\\n               Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param newCooldownPeriod New value for the cool down period.\\n    */\\n    function setLpCooldownPeriod(uint256 newCooldownPeriod) external isGovernor {\\n        lpCooldownPeriod = newCooldownPeriod;\\n        emit GlobalsParamSet(\\\"LP_COOLDOWN_PERIOD\\\", newCooldownPeriod);\\n    }\\n\\n    /**\\n        @dev   Sets the Staker unstake window. This change will affect the existing window for the Stakers that already intended to unstake.\\n               Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param newUnstakeWindow New value for the unstake window.\\n    */\\n    function setStakerUnstakeWindow(uint256 newUnstakeWindow) external isGovernor {\\n        stakerUnstakeWindow = newUnstakeWindow;\\n        emit GlobalsParamSet(\\\"STAKER_UNSTAKE_WINDOW\\\", newUnstakeWindow);\\n    }\\n\\n    /**\\n        @dev   Sets the Liquidity Pool withdraw window. This change will affect the existing window for the LPs that already intended to withdraw.\\n               Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param newLpWithdrawWindow New value for the withdraw window.\\n    */\\n    function setLpWithdrawWindow(uint256 newLpWithdrawWindow) external isGovernor {\\n        lpWithdrawWindow = newLpWithdrawWindow;\\n        emit GlobalsParamSet(\\\"LP_WITHDRAW_WINDOW\\\", newLpWithdrawWindow);\\n    }\\n\\n    /**\\n        @dev   Sets the allowed Uniswap slippage percentage, in basis points. Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param newMaxSlippage New max slippage percentage (in basis points)\\n    */\\n    function setMaxSwapSlippage(uint256 newMaxSlippage) external isGovernor {\\n        _checkPercentageRange(newMaxSlippage);\\n        maxSwapSlippage = newMaxSlippage;\\n        emit GlobalsParamSet(\\\"MAX_SWAP_SLIPPAGE\\\", newMaxSlippage);\\n    }\\n\\n    /**\\n      @dev   Sets the Global Admin. Only the Governor can call this function.\\n      @dev   It emits a `GlobalAdminSet` event.\\n      @param newGlobalAdmin New global admin address.\\n    */\\n    function setGlobalAdmin(address newGlobalAdmin) external {\\n        require(msg.sender == governor && newGlobalAdmin != address(0), \\\"MG:NOT_GOV_OR_ADMIN\\\");\\n        require(!protocolPaused, \\\"MG:PROTO_PAUSED\\\");\\n        globalAdmin = newGlobalAdmin;\\n        emit GlobalAdminSet(newGlobalAdmin);\\n    }\\n\\n    /**\\n        @dev   Sets the validity of a Balancer Pool. Only the Governor can call this function.\\n        @dev   It emits a `BalancerPoolSet` event.\\n        @param balancerPool Address of Balancer Pool contract.\\n        @param valid        The new validity status of a Balancer Pool.\\n    */\\n    function setValidBalancerPool(address balancerPool, bool valid) external isGovernor {\\n        isValidBalancerPool[balancerPool] = valid;\\n        emit BalancerPoolSet(balancerPool, valid);\\n    }\\n\\n    /**\\n      @dev   Sets the paused/unpaused state of the protocol. Only the Global Admin can call this function.\\n      @dev   It emits a `ProtocolPaused` event.\\n      @param pause Boolean flag to switch externally facing functionality in the protocol on/off.\\n    */\\n    function setProtocolPause(bool pause) external {\\n        require(msg.sender == globalAdmin, \\\"MG:NOT_ADMIN\\\");\\n        protocolPaused = pause;\\n        emit ProtocolPaused(pause);\\n    }\\n\\n    /**\\n        @dev   Sets the validity of a PoolFactory. Only the Governor can call this function.\\n        @param poolFactory Address of PoolFactory.\\n        @param valid       The new validity status of a PoolFactory.\\n    */\\n    function setValidPoolFactory(address poolFactory, bool valid) external isGovernor {\\n        isValidPoolFactory[poolFactory] = valid;\\n    }\\n\\n    /**\\n        @dev   Sets the validity of a LoanFactory. Only the Governor can call this function.\\n        @param loanFactory Address of LoanFactory.\\n        @param valid       The new validity status of a LoanFactory.\\n    */\\n    function setValidLoanFactory(address loanFactory, bool valid) external isGovernor {\\n        isValidLoanFactory[loanFactory] = valid;\\n    }\\n\\n    /**\\n        @dev   Sets the validity of a sub factory as it relates to a super factory. Only the Governor can call this function.\\n        @param superFactory The core factory (e.g. PoolFactory, LoanFactory).\\n        @param subFactory   The sub factory used by core factory (e.g. LiquidityLockerFactory).\\n        @param valid        The new validity status of a subFactory within context of super factory.\\n    */\\n    function setValidSubFactory(address superFactory, address subFactory, bool valid) external isGovernor {\\n        require(isValidLoanFactory[superFactory] || isValidPoolFactory[superFactory], \\\"MG:INVALID_SUPER_F\\\");\\n        validSubFactories[superFactory][subFactory] = valid;\\n    }\\n\\n    /**\\n        @dev   Sets the path to swap an asset through Uniswap. Only the Governor can call this function.\\n        @param from Asset being swapped.\\n        @param to   Final asset to receive. **\\n        @param mid  Middle asset.\\n\\n        ** Set to == mid to enable a bilateral swap (single path swap).\\n           Set to != mid to enable a triangular swap (multi path swap).\\n    */\\n    function setDefaultUniswapPath(address from, address to, address mid) external isGovernor {\\n        defaultUniswapPath[from][to] = mid;\\n    }\\n\\n    /**\\n        @dev   Sets the validity of a Pool Delegate (those allowed to create Pools). Only the Governor can call this function.\\n        @dev   It emits a `PoolDelegateSet` event.\\n        @param delegate Address to manage permissions for.\\n        @param valid    The new validity status of a Pool Delegate.\\n    */\\n    function setPoolDelegateAllowlist(address delegate, bool valid) external isGovernor {\\n        isValidPoolDelegate[delegate] = valid;\\n        emit PoolDelegateSet(delegate, valid);\\n    }\\n\\n    /**\\n        @dev   Sets the validity of an asset for collateral. Only the Governor can call this function.\\n        @dev   It emits a `CollateralAssetSet` event.\\n        @param asset The asset to assign validity to.\\n        @param valid The new validity status of a Collateral Asset.\\n    */\\n    function setCollateralAsset(address asset, bool valid) external isGovernor {\\n        isValidCollateralAsset[asset] = valid;\\n        emit CollateralAssetSet(asset, IERC20Details(asset).decimals(), IERC20Details(asset).symbol(), valid);\\n    }\\n\\n    /**\\n        @dev   Sets the validity of an asset for liquidity in Pools. Only the Governor can call this function.\\n        @dev   It emits a `LiquidityAssetSet` event.\\n        @param asset Address of the valid asset.\\n        @param valid The new validity status a Liquidity Asset in Pools.\\n    */\\n    function setLiquidityAsset(address asset, bool valid) external isGovernor {\\n        isValidLiquidityAsset[asset] = valid;\\n        emit LiquidityAssetSet(asset, IERC20Details(asset).decimals(), IERC20Details(asset).symbol(), valid);\\n    }\\n\\n    /**\\n        @dev   Sets the validity of a calculator contract. Only the Governor can call this function.\\n        @param calc  Calculator address.\\n        @param valid The new validity status of a Calculator.\\n    */\\n    function setCalc(address calc, bool valid) external isGovernor {\\n        validCalcs[calc] = valid;\\n    }\\n\\n    /**\\n        @dev   Sets the investor fee (in basis points). Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param _fee The fee, e.g., 50 = 0.50%.\\n    */\\n    function setInvestorFee(uint256 _fee) external isGovernor {\\n        _checkPercentageRange(treasuryFee.add(_fee));\\n        investorFee = _fee;\\n        emit GlobalsParamSet(\\\"INVESTOR_FEE\\\", _fee);\\n    }\\n\\n    /**\\n        @dev   Sets the treasury fee (in basis points). Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param _fee The fee, e.g., 50 = 0.50%.\\n    */\\n    function setTreasuryFee(uint256 _fee) external isGovernor {\\n        _checkPercentageRange(investorFee.add(_fee));\\n        treasuryFee = _fee;\\n        emit GlobalsParamSet(\\\"TREASURY_FEE\\\", _fee);\\n    }\\n\\n    /**\\n        @dev   Sets the HeliosTreasury. Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param _heliosTreasury New HeliosTreasury address.\\n    */\\n    function setHeliosTreasury(address _heliosTreasury) external isGovernor {\\n        require(_heliosTreasury != address(0), \\\"MG:ZERO_ADDR\\\");\\n        heliosTreasury = _heliosTreasury;\\n        emit GlobalsAddressSet(\\\"HELIOS_TREASURY\\\", _heliosTreasury);\\n    }\\n\\n    /**\\n        @dev   Sets the default grace period. Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param _defaultGracePeriod Number of seconds to set the grace period to.\\n    */\\n    function setDefaultGracePeriod(uint256 _defaultGracePeriod) external isGovernor {\\n        defaultGracePeriod = _defaultGracePeriod;\\n        emit GlobalsParamSet(\\\"DEFAULT_GRACE_PERIOD\\\", _defaultGracePeriod);\\n    }\\n\\n    /**\\n        @dev   Sets the minimum Loan equity. Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param _minLoanEquity Min percentage of Loan equity an account must have to trigger liquidations.\\n    */\\n    function setMinLoanEquity(uint256 _minLoanEquity) external isGovernor {\\n        _checkPercentageRange(_minLoanEquity);\\n        minLoanEquity = _minLoanEquity;\\n        emit GlobalsParamSet(\\\"MIN_LOAN_EQUITY\\\", _minLoanEquity);\\n    }\\n\\n    /**\\n        @dev   Sets the funding period. Only the Governor can call this function.\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param _fundingPeriod Number of seconds to set the drawdown grace period to.\\n    */\\n    function setFundingPeriod(uint256 _fundingPeriod) external isGovernor {\\n        fundingPeriod = _fundingPeriod;\\n        emit GlobalsParamSet(\\\"FUNDING_PERIOD\\\", _fundingPeriod);\\n    }\\n\\n    /**\\n        @dev   Sets the the minimum Pool cover required to finalize a Pool. Only the Governor can call this function. FIX\\n        @dev   It emits a `GlobalsParamSet` event.\\n        @param amt The new minimum swap out required.\\n    */\\n    function setSwapOutRequired(uint256 amt) external isGovernor {\\n        require(amt >= uint256(10_000), \\\"MG:SWAP_OUT_TOO_LOW\\\");\\n        swapOutRequired = amt;\\n        emit GlobalsParamSet(\\\"SWAP_OUT_REQUIRED\\\", amt);\\n    }\\n\\n    /**\\n        @dev   Sets a price feed's oracle. Only the Governor can call this function.\\n        @dev   It emits a `OracleSet` event.\\n        @param asset  Asset to update price for.\\n        @param oracle New oracle to use.\\n    */\\n    function setPriceOracle(address asset, address oracle) external isGovernor {\\n        oracleFor[asset] = oracle;\\n        emit OracleSet(asset, oracle);\\n    }\\n\\n    /************************************/\\n    /*** Transfer Ownership Functions ***/\\n    /************************************/\\n\\n    /**\\n        @dev   Sets a new Pending Governor. This address can become Governor if they accept. Only the Governor can call this function.\\n        @dev   It emits a `PendingGovernorSet` event.\\n        @param _pendingGovernor Address of new Pending Governor.\\n    */\\n    function setPendingGovernor(address _pendingGovernor) external isGovernor {\\n        require(_pendingGovernor != address(0), \\\"MG:ZERO_ADDR\\\");\\n        pendingGovernor = _pendingGovernor;\\n        emit PendingGovernorSet(_pendingGovernor);\\n    }\\n\\n    /**\\n        @dev Accept the Governor position. Only the Pending Governor can call this function.\\n        @dev It emits a `GovernorAccepted` event.\\n    */\\n    function acceptGovernor() external {\\n        require(msg.sender == pendingGovernor, \\\"MG:NOT_PENDING_GOV\\\");\\n        governor        = msg.sender;\\n        pendingGovernor = address(0);\\n        emit GovernorAccepted(msg.sender);\\n    }\\n\\n    /************************/\\n    /*** Getter Functions ***/\\n    /************************/\\n\\n    /**\\n        @dev    Fetch price for asset from Chainlink oracles.\\n        @param  asset Asset to fetch price of.\\n        @return Price of asset in USD.\\n    */\\n    function getLatestPrice(address asset) external view returns (uint256) {\\n        return uint256(IOracle(oracleFor[asset]).getLatestPrice());\\n    }\\n\\n    /**\\n        @dev   Checks that a subFactory is valid as it relates to a super factory.\\n        @param superFactory The core factory (e.g. PoolFactory, LoanFactory).\\n        @param subFactory   The sub factory used by core factory (e.g. LiquidityLockerFactory).\\n        @param factoryType  The type expected for the subFactory. References listed below.\\n                                0 = COLLATERAL_LOCKER_FACTORY\\n                                1 = DEBT_LOCKER_FACTORY\\n                                2 = FUNDING_LOCKER_FACTORY\\n                                3 = LIQUIDITY_LOCKER_FACTORY\\n                                4 = STAKE_LOCKER_FACTORY\\n    */\\n    function isValidSubFactory(address superFactory, address subFactory, uint8 factoryType) external view returns (bool) {\\n        return validSubFactories[superFactory][subFactory] && ISubFactory(subFactory).factoryType() == factoryType;\\n    }\\n\\n    /**\\n        @dev   Checks that a Calculator is valid.\\n        @param calc     Calculator address.\\n        @param calcType Calculator type.\\n    */\\n    function isValidCalc(address calc, uint8 calcType) external view returns (bool) {\\n        return validCalcs[calc] && ICalc(calc).calcType() == calcType;\\n    }\\n\\n    /**\\n        @dev    Returns the `lpCooldownPeriod` and `lpWithdrawWindow` as a tuple, for convenience.\\n        @return [0] = lpCooldownPeriod\\n                [1] = lpWithdrawWindow\\n    */\\n    function getLpCooldownParams() external view returns (uint256, uint256) {\\n        return (lpCooldownPeriod, lpWithdrawWindow);\\n    }\\n\\n    /************************/\\n    /*** Helper Functions ***/\\n    /************************/\\n\\n    /**\\n        @dev Checks that percentage is less than 100%.\\n    */\\n    function _checkPercentageRange(uint256 percentage) internal pure {\\n        require(percentage <= uint256(10_000), \\\"MG:PCT_OOB\\\");\\n    }\\n\\n}\\n\",\"keccak256\":\"0xf45a415a40dcd4e5c8859dd447d88411f5ce6b67c269a306782ff627002e224b\",\"license\":\"AGPL-3.0-or-later\"},\"packages/protocol/contracts/interfaces/IERC20Details.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity 0.6.11;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Details is IERC20 {\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint256);\\n\\n}\\n\",\"keccak256\":\"0xfe1330353ffc81bc47760f471687ecb981a1e7dfb1f92dad063bd5c5886208b7\",\"license\":\"AGPL-3.0-or-later\"},\"packages/protocol/contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity 0.6.11;\\n\\ninterface IOracle {\\n\\n    function priceFeed() external view returns (address);\\n\\n    function globals() external view returns (address);\\n\\n    function assetAddress() external view returns (address);\\n\\n    function manualOverride() external view returns (bool);\\n\\n    function manualPrice() external view returns (int256);\\n\\n    function getLatestPrice() external view returns (int256);\\n    \\n    function changeAggregator(address) external;\\n\\n    function getAssetAddress() external view returns (address);\\n    \\n    function getDenomination() external view returns (bytes32);\\n    \\n    function setManualPrice(int256) external;\\n    \\n    function setManualOverride(bool) external;\\n\\n}\\n\",\"keccak256\":\"0x77e1caa715665a8a244adf91f0aef711fe9f267053edcb83d2f3560201df86ba\",\"license\":\"AGPL-3.0-or-later\"},\"packages/protocol/contracts/interfaces/ISubFactory.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity 0.6.11;\\n\\ninterface ISubFactory {\\n\\n    function factoryType() external view returns (uint8);\\n\\n}\\n\",\"keccak256\":\"0xa7c6f75ce85dcdf01c373dc95806131527a007fb7f764d3eac17ca48e1f3ed24\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001f9a38038062001f9a8339810160408190526200003491620000eb565b600180546001600160a01b038086166001600160a01b0319928316179092556001600160601b0319606085901b1660805260006005819055620d2f00600681905562069780600455603260078190556008556103e86009556107d0600a55600380549486169490931693909317909155600b829055600c919091556202a300600d819055600e556040517f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c89190a150505062000157565b60008060006060848603121562000100578283fd5b83516200010d816200013e565b602085015190935062000120816200013e565b604085015190925062000133816200013e565b809150509250925092565b6001600160a01b03811681146200015457600080fd5b50565b60805160601c611e2562000175600039806113a85250611e256000f3fe608060405234801561001057600080fd5b50600436106103835760003560e01c806374d7c62b116101de578063d1cdf3011161010f578063ec9a9368116100ad578063f38976631161007c578063f3897663146106e6578063f85ee6f8146106f9578063fd4a91211461070c578063fd6f1de01461071f57610383565b8063ec9a9368146106a5578063efdb16fc146106ad578063f235757f146106c0578063f33ef09a146106d357610383565b8063df3d02bd116100e9578063df3d02bd14610685578063e1c5cdbd1461068d578063e3056a3414610695578063e58bb6391461069d57610383565b8063d1cdf30114610657578063dbc6c5521461066a578063dd02e0ec1461067d57610383565b8063ae9278fe1161017c578063be44ed6b11610156578063be44ed6b14610616578063c52bc31d14610629578063c9c672401461063c578063cc32d1761461064f57610383565b8063ae9278fe146105e8578063aed019b9146105f0578063b53afda71461060357610383565b80638695118a116101b85780638695118a146105a45780638c14834b146105b75780639f51290b146105ca578063a965d6b5146105e057610383565b806374d7c62b1461057657806377e741c71461057e5780638608a6e11461059157610383565b80633106374c116102b85780634e989118116102565780636597b899116102305780636597b8991461053557806367a74ddc14610548578063705d5f241461055b57806372a22d711461056357610383565b80634e98911814610507578063553231951461051a5780635e0454671461052257610383565b806344c14f711161029257806344c14f71146104c6578063490dae64146104d95780634a2697c4146104ec5780634d866592146104f457610383565b80633106374c146104a3578063372e3546146104ab578063425fad58146104be57610383565b80631beb84e711610325578063298b795d116102ff578063298b795d146104575780632a5aa2921461046a5780632daa0d891461047d5780632fa6c88f1461049057610383565b80631beb84e7146104275780632018b8701461043a578063267186061461044257610383565b806316345f181161036157806316345f18146103d957806316a12d7a146103f95780631b1804aa146104015780631b5833f71461041457610383565b80630c340a2414610388578063107c0240146103a657806313d459fb146103c6575b600080fd5b610390610732565b60405161039d9190611b0b565b60405180910390f35b6103b96103b4366004611886565b610741565b60405161039d9190611ba5565b6103b96103d4366004611964565b610756565b6103ec6103e7366004611886565b61080a565b60405161039d9190611d56565b6103ec61089a565b6103b961040f3660046118a1565b6108a0565b6103b96104223660046119dc565b6108c0565b6103b9610435366004611886565b610964565b6103ec610979565b610455610450366004611ad7565b61097f565b005b610455610465366004611ad7565b6109f7565b610455610478366004611ad7565b610a61565b61045561048b3660046119a1565b610ac1565b61045561049e3660046119a1565b610c31565b6103ec610cd7565b6103b96104b9366004611886565b610cdd565b6103b9610cf2565b6104556104d4366004611ad7565b610cfb565b6104556104e73660046119a1565b610d61565b6103ec610de1565b6103906105023660046118a1565b610de7565b610455610515366004611a08565b610e0d565b6103ec610e80565b610455610530366004611ad7565b610e86565b6104556105433660046119a1565b610f00565b6104556105563660046118a1565b610f55565b6103ec610fe0565b6103b9610571366004611886565b610fe6565b6103ec610ffb565b61045561058c366004611ad7565b611001565b61045561059f366004611ad7565b611076565b6103b96105b2366004611886565b6110da565b6103b96105c5366004611886565b6110ef565b6105d2611104565b60405161039d929190611d5f565b6103ec61110e565b610390611114565b6103906105fe366004611886565b611123565b6103b9610611366004611886565b61113e565b6104556106243660046119a1565b611153565b610455610637366004611886565b6111a8565b61045561064a3660046119a1565b611253565b6103ec6112a8565b610455610665366004611ad7565b6112ae565b610455610678366004611ad7565b611315565b6103ec61139a565b6103ec6113a0565b6103906113a6565b6103906113ca565b6104556113d9565b61039061144b565b6104556106bb3660046119a1565b61145a565b6104556106ce366004611886565b6114e4565b6104556106e1366004611ad7565b61157c565b6104556106f43660046118d5565b6115e8565b61045561070736600461191a565b61164f565b61045561071a366004611ad7565b61170e565b61045561072d366004611886565b611776565b6001546001600160a01b031681565b60176020526000908152604090205460ff1681565b6001600160a01b03808416600090815260196020908152604080832093861683529290529081205460ff16801561080257508160ff16836001600160a01b03166364e1fd556040518163ffffffff1660e01b815260040160206040518083038186803b1580156107c557600080fd5b505afa1580156107d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fd9190611aef565b60ff16145b949350505050565b6001600160a01b038082166000908152601660209081526040808320548151638e15f47360e01b8152915193941692638e15f47392600480840193919291829003018186803b15801561085c57600080fd5b505afa158015610870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108949190611a24565b92915050565b60075481565b601960209081526000928352604080842090915290825290205460ff1681565b6001600160a01b03821660009081526012602052604081205460ff16801561095d57508160ff16836001600160a01b0316639d8ae4466040518163ffffffff1660e01b815260040160206040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190611aef565b60ff16145b9392505050565b60126020526000908152604090205460ff1681565b600d5481565b6001546001600160a01b031633146109b25760405162461bcd60e51b81526004016109a990611ce0565b60405180910390fd5b80600e81905550714c505f57495448445241575f57494e444f5760701b600080516020611dd0833981519152826040516109ec9190611d56565b60405180910390a250565b6001546001600160a01b03163314610a215760405162461bcd60e51b81526004016109a990611ce0565b610a2a81611825565b80600a819055506e4d494e5f4c4f414e5f45515549545960881b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b03163314610a8b5760405162461bcd60e51b81526004016109a990611ce0565b806006819055506d11955391125391d7d411549253d160921b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b03163314610aeb5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b038216600081815260106020908152604091829020805460ff1916851515179055815163313ce56760e01b815291517f18d231995d1f7e4354b1786418aa8f34f99996ded9cc6b1d43c3815eb6f5ab79938693909263313ce56792600480840193829003018186803b158015610b6757600080fd5b505afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190611a24565b846001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610bd857600080fd5b505afa158015610bec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c149190810190611a3c565b84604051610c259493929190611b54565b60405180910390a15050565b6001546001600160a01b03163314610c5b5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b038216600081815260116020908152604091829020805460ff1916851515179055815163313ce56760e01b815291517fb9456501e6a30eefbf8c4f9d199ef0c7ac7491abb068d594bbafbdec85447ccc938693909263313ce56792600480840193829003018186803b158015610b6757600080fd5b60055481565b60136020526000908152604090205460ff1681565b600f5460ff1681565b6001546001600160a01b03163314610d255760405162461bcd60e51b81526004016109a990611ce0565b80600481905550731111519055531517d1d49050d157d411549253d160621b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b03163314610d8b5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03821660009081526014602052604090819020805460ff1916831515179055517f936e0e50587b3c03d3e833e5cc880e9a62afb49d51808e96d00c4790ed03796290610c259084908490611b39565b600a5481565b60156020908152600092835260408084209091529082529020546001600160a01b031681565b6003546001600160a01b03163314610e375760405162461bcd60e51b81526004016109a990611d30565b600f805460ff19168215151790556040517f6e0cb5fa7a57c38eb7939c1104f95fccb5b7a6a8c1a7cab76934305439b639f590610e75908390611ba5565b60405180910390a150565b60095481565b6001546001600160a01b03163314610eb05760405162461bcd60e51b81526004016109a990611ce0565b600854610ecc90610ec7908363ffffffff61184a16565b611825565b806007819055506b494e564553544f525f46454560a01b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b03163314610f2a5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03919091166000908152601760205260409020805460ff1916911515919091179055565b6001546001600160a01b03163314610f7f5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b038281166000908152601660205260409081902080546001600160a01b03191692841692909217909155517fc1d3048301c0d23629a2532c8defa6d68f8e1a0e4157918769e9fb1b2eeb888e90610c259084908490611b1f565b60045481565b60146020526000908152604090205460ff1681565b60065481565b6001546001600160a01b0316331461102b5760405162461bcd60e51b81526004016109a990611ce0565b60075461104290610ec7908363ffffffff61184a16565b806008819055506b54524541535552595f46454560a01b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b031633146110a05760405162461bcd60e51b81526004016109a990611ce0565b80600c8190555071131417d0d3d3d31113d5d397d411549253d160721b600080516020611dd0833981519152826040516109ec9190611d56565b60106020526000908152604090205460ff1681565b60116020526000908152604090205460ff1681565b600c54600e549091565b600b5481565b6002546001600160a01b031681565b6016602052600090815260409020546001600160a01b031681565b60186020526000908152604090205460ff1681565b6001546001600160a01b0316331461117d5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03919091166000908152601260205260409020805460ff1916911515919091179055565b6001546001600160a01b0316331480156111ca57506001600160a01b03811615155b6111e65760405162461bcd60e51b81526004016109a990611bd4565b600f5460ff16156112095760405162461bcd60e51b81526004016109a990611c64565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fad3f8fa73ce3985d027e4c3bbe1194701a23e635a746bcf73d8632f677ac388290600090a250565b6001546001600160a01b0316331461127d5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03919091166000908152601860205260409020805460ff1916911515919091179055565b60085481565b6001546001600160a01b031633146112d85760405162461bcd60e51b81526004016109a990611ce0565b80600d81905550745354414b45525f554e5354414b455f57494e444f5760581b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b0316331461133f5760405162461bcd60e51b81526004016109a990611ce0565b6127108110156113615760405162461bcd60e51b81526004016109a990611c8d565b806005819055507014d5d05417d3d55517d491545552549151607a1b600080516020611dd0833981519152826040516109ec9190611d56565b600c5481565b600e5481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031681565b6000546001600160a01b031633146114035760405162461bcd60e51b81526004016109a990611c01565b60018054336001600160a01b031991821681179092556000805490911681556040517fb7a4788848eba3319c766bdd6428c7d7a10e4cba4fd6ade9b79b7102b7099b369190a2565b6003546001600160a01b031681565b6001546001600160a01b031633146114845760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03821660008181526013602052604090819020805460ff1916841515179055517fd2e6a599a52383178be9bf2d0be60c96615b89f8d9cf6c680f06962aa73679fc906114d8908490611ba5565b60405180910390a25050565b6001546001600160a01b0316331461150e5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b0381166115345760405162461bcd60e51b81526004016109a990611cba565b600080546001600160a01b0319166001600160a01b038316908117825560405190917f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def91a250565b6001546001600160a01b031633146115a65760405162461bcd60e51b81526004016109a990611ce0565b6115af81611825565b80600981905550704d41585f535741505f534c49505041474560781b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b031633146116125760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03928316600090815260156020908152604080832094861683529390529190912080546001600160a01b03191691909216179055565b6001546001600160a01b031633146116795760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03831660009081526018602052604090205460ff16806116b857506001600160a01b03831660009081526017602052604090205460ff165b6116d45760405162461bcd60e51b81526004016109a990611d04565b6001600160a01b03928316600090815260196020908152604080832094909516825292909252919020805460ff1916911515919091179055565b6001546001600160a01b031633146117385760405162461bcd60e51b81526004016109a990611ce0565b80600b819055507514d51052d15497d0d3d3d31113d5d397d411549253d160521b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b031633146117a05760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b0381166117c65760405162461bcd60e51b81526004016109a990611cba565b600280546001600160a01b0319166001600160a01b0383161790556040516e48454c494f535f545245415355525960881b907f806b6f19dfa971f58fc9140115f19907b73e8336024786c79c2ffc56f6678ec1906109ec908490611b0b565b6127108111156118475760405162461bcd60e51b81526004016109a990611bb0565b50565b60008282018381101561095d5760405162461bcd60e51b81526004016109a990611c2d565b80356001600160a01b038116811461089457600080fd5b600060208284031215611897578081fd5b61095d838361186f565b600080604083850312156118b3578081fd5b6118bd848461186f565b91506118cc846020850161186f565b90509250929050565b6000806000606084860312156118e9578081fd5b6118f3858561186f565b9250611902856020860161186f565b9150611911856040860161186f565b90509250925092565b60008060006060848603121561192e578283fd5b833561193981611d9d565b9250602084013561194981611d9d565b9150604084013561195981611db2565b809150509250925092565b600080600060608486031215611978578283fd5b611982858561186f565b9250611991856020860161186f565b9150604084013561195981611dc0565b600080604083850312156119b3578182fd5b6119bd848461186f565b9150602083013580151581146119d1578182fd5b809150509250929050565b600080604083850312156119ee578182fd5b6119f8848461186f565b915060208301356119d181611dc0565b600060208284031215611a19578081fd5b813561095d81611db2565b600060208284031215611a35578081fd5b5051919050565b600060208284031215611a4d578081fd5b815167ffffffffffffffff80821115611a64578283fd5b81840185601f820112611a75578384fd5b8051925081831115611a85578384fd5b604051601f8401601f191681016020018381118282101715611aa5578586fd5b604052838152818401602001871015611abc578485fd5b611acd846020830160208501611d6d565b9695505050505050565b600060208284031215611ae8578081fd5b5035919050565b600060208284031215611b00578081fd5b815161095d81611dc0565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039290921682521515602082015260400190565b600060018060a01b0386168252846020830152608060408301528351806080840152611b878160a0850160208801611d6d565b921515606083015250601f91909101601f19160160a0019392505050565b901515815260200190565b6020808252600a908201526926a39d2821aa2fa7a7a160b11b604082015260600190565b60208082526013908201527226a39d2727aa2fa3a7ab2fa7a92fa0a226a4a760691b604082015260600190565b60208082526012908201527126a39d2727aa2fa822a72224a723afa3a7ab60711b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600f908201526e1351ce941493d513d7d4105554d151608a1b604082015260600190565b6020808252601390820152724d473a535741505f4f55545f544f4f5f4c4f5760681b604082015260600190565b6020808252600c908201526b26a39d2d22a927afa0a2222960a11b604082015260600190565b6020808252600a908201526926a39d2727aa2fa3a7ab60b11b604082015260600190565b60208082526012908201527126a39d24a72b20a624a22fa9aaa822a92fa360711b604082015260600190565b6020808252600c908201526b26a39d2727aa2fa0a226a4a760a11b604082015260600190565b90815260200190565b918252602082015260400190565b60005b83811015611d88578181015183820152602001611d70565b83811115611d97576000848401525b50505050565b6001600160a01b038116811461184757600080fd5b801515811461184757600080fd5b60ff8116811461184757600080fdfed8780a041c72589f51af8b3fade9cc8a466d00ecef64d45657dd6cdebf1ecf47a2646970667358221220187be69e5bf2a5ea344892fd29245a2dcdbca2b3d847ac8acb35af17024726b364736f6c634300060b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103835760003560e01c806374d7c62b116101de578063d1cdf3011161010f578063ec9a9368116100ad578063f38976631161007c578063f3897663146106e6578063f85ee6f8146106f9578063fd4a91211461070c578063fd6f1de01461071f57610383565b8063ec9a9368146106a5578063efdb16fc146106ad578063f235757f146106c0578063f33ef09a146106d357610383565b8063df3d02bd116100e9578063df3d02bd14610685578063e1c5cdbd1461068d578063e3056a3414610695578063e58bb6391461069d57610383565b8063d1cdf30114610657578063dbc6c5521461066a578063dd02e0ec1461067d57610383565b8063ae9278fe1161017c578063be44ed6b11610156578063be44ed6b14610616578063c52bc31d14610629578063c9c672401461063c578063cc32d1761461064f57610383565b8063ae9278fe146105e8578063aed019b9146105f0578063b53afda71461060357610383565b80638695118a116101b85780638695118a146105a45780638c14834b146105b75780639f51290b146105ca578063a965d6b5146105e057610383565b806374d7c62b1461057657806377e741c71461057e5780638608a6e11461059157610383565b80633106374c116102b85780634e989118116102565780636597b899116102305780636597b8991461053557806367a74ddc14610548578063705d5f241461055b57806372a22d711461056357610383565b80634e98911814610507578063553231951461051a5780635e0454671461052257610383565b806344c14f711161029257806344c14f71146104c6578063490dae64146104d95780634a2697c4146104ec5780634d866592146104f457610383565b80633106374c146104a3578063372e3546146104ab578063425fad58146104be57610383565b80631beb84e711610325578063298b795d116102ff578063298b795d146104575780632a5aa2921461046a5780632daa0d891461047d5780632fa6c88f1461049057610383565b80631beb84e7146104275780632018b8701461043a578063267186061461044257610383565b806316345f181161036157806316345f18146103d957806316a12d7a146103f95780631b1804aa146104015780631b5833f71461041457610383565b80630c340a2414610388578063107c0240146103a657806313d459fb146103c6575b600080fd5b610390610732565b60405161039d9190611b0b565b60405180910390f35b6103b96103b4366004611886565b610741565b60405161039d9190611ba5565b6103b96103d4366004611964565b610756565b6103ec6103e7366004611886565b61080a565b60405161039d9190611d56565b6103ec61089a565b6103b961040f3660046118a1565b6108a0565b6103b96104223660046119dc565b6108c0565b6103b9610435366004611886565b610964565b6103ec610979565b610455610450366004611ad7565b61097f565b005b610455610465366004611ad7565b6109f7565b610455610478366004611ad7565b610a61565b61045561048b3660046119a1565b610ac1565b61045561049e3660046119a1565b610c31565b6103ec610cd7565b6103b96104b9366004611886565b610cdd565b6103b9610cf2565b6104556104d4366004611ad7565b610cfb565b6104556104e73660046119a1565b610d61565b6103ec610de1565b6103906105023660046118a1565b610de7565b610455610515366004611a08565b610e0d565b6103ec610e80565b610455610530366004611ad7565b610e86565b6104556105433660046119a1565b610f00565b6104556105563660046118a1565b610f55565b6103ec610fe0565b6103b9610571366004611886565b610fe6565b6103ec610ffb565b61045561058c366004611ad7565b611001565b61045561059f366004611ad7565b611076565b6103b96105b2366004611886565b6110da565b6103b96105c5366004611886565b6110ef565b6105d2611104565b60405161039d929190611d5f565b6103ec61110e565b610390611114565b6103906105fe366004611886565b611123565b6103b9610611366004611886565b61113e565b6104556106243660046119a1565b611153565b610455610637366004611886565b6111a8565b61045561064a3660046119a1565b611253565b6103ec6112a8565b610455610665366004611ad7565b6112ae565b610455610678366004611ad7565b611315565b6103ec61139a565b6103ec6113a0565b6103906113a6565b6103906113ca565b6104556113d9565b61039061144b565b6104556106bb3660046119a1565b61145a565b6104556106ce366004611886565b6114e4565b6104556106e1366004611ad7565b61157c565b6104556106f43660046118d5565b6115e8565b61045561070736600461191a565b61164f565b61045561071a366004611ad7565b61170e565b61045561072d366004611886565b611776565b6001546001600160a01b031681565b60176020526000908152604090205460ff1681565b6001600160a01b03808416600090815260196020908152604080832093861683529290529081205460ff16801561080257508160ff16836001600160a01b03166364e1fd556040518163ffffffff1660e01b815260040160206040518083038186803b1580156107c557600080fd5b505afa1580156107d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fd9190611aef565b60ff16145b949350505050565b6001600160a01b038082166000908152601660209081526040808320548151638e15f47360e01b8152915193941692638e15f47392600480840193919291829003018186803b15801561085c57600080fd5b505afa158015610870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108949190611a24565b92915050565b60075481565b601960209081526000928352604080842090915290825290205460ff1681565b6001600160a01b03821660009081526012602052604081205460ff16801561095d57508160ff16836001600160a01b0316639d8ae4466040518163ffffffff1660e01b815260040160206040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190611aef565b60ff16145b9392505050565b60126020526000908152604090205460ff1681565b600d5481565b6001546001600160a01b031633146109b25760405162461bcd60e51b81526004016109a990611ce0565b60405180910390fd5b80600e81905550714c505f57495448445241575f57494e444f5760701b600080516020611dd0833981519152826040516109ec9190611d56565b60405180910390a250565b6001546001600160a01b03163314610a215760405162461bcd60e51b81526004016109a990611ce0565b610a2a81611825565b80600a819055506e4d494e5f4c4f414e5f45515549545960881b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b03163314610a8b5760405162461bcd60e51b81526004016109a990611ce0565b806006819055506d11955391125391d7d411549253d160921b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b03163314610aeb5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b038216600081815260106020908152604091829020805460ff1916851515179055815163313ce56760e01b815291517f18d231995d1f7e4354b1786418aa8f34f99996ded9cc6b1d43c3815eb6f5ab79938693909263313ce56792600480840193829003018186803b158015610b6757600080fd5b505afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190611a24565b846001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610bd857600080fd5b505afa158015610bec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c149190810190611a3c565b84604051610c259493929190611b54565b60405180910390a15050565b6001546001600160a01b03163314610c5b5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b038216600081815260116020908152604091829020805460ff1916851515179055815163313ce56760e01b815291517fb9456501e6a30eefbf8c4f9d199ef0c7ac7491abb068d594bbafbdec85447ccc938693909263313ce56792600480840193829003018186803b158015610b6757600080fd5b60055481565b60136020526000908152604090205460ff1681565b600f5460ff1681565b6001546001600160a01b03163314610d255760405162461bcd60e51b81526004016109a990611ce0565b80600481905550731111519055531517d1d49050d157d411549253d160621b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b03163314610d8b5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03821660009081526014602052604090819020805460ff1916831515179055517f936e0e50587b3c03d3e833e5cc880e9a62afb49d51808e96d00c4790ed03796290610c259084908490611b39565b600a5481565b60156020908152600092835260408084209091529082529020546001600160a01b031681565b6003546001600160a01b03163314610e375760405162461bcd60e51b81526004016109a990611d30565b600f805460ff19168215151790556040517f6e0cb5fa7a57c38eb7939c1104f95fccb5b7a6a8c1a7cab76934305439b639f590610e75908390611ba5565b60405180910390a150565b60095481565b6001546001600160a01b03163314610eb05760405162461bcd60e51b81526004016109a990611ce0565b600854610ecc90610ec7908363ffffffff61184a16565b611825565b806007819055506b494e564553544f525f46454560a01b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b03163314610f2a5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03919091166000908152601760205260409020805460ff1916911515919091179055565b6001546001600160a01b03163314610f7f5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b038281166000908152601660205260409081902080546001600160a01b03191692841692909217909155517fc1d3048301c0d23629a2532c8defa6d68f8e1a0e4157918769e9fb1b2eeb888e90610c259084908490611b1f565b60045481565b60146020526000908152604090205460ff1681565b60065481565b6001546001600160a01b0316331461102b5760405162461bcd60e51b81526004016109a990611ce0565b60075461104290610ec7908363ffffffff61184a16565b806008819055506b54524541535552595f46454560a01b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b031633146110a05760405162461bcd60e51b81526004016109a990611ce0565b80600c8190555071131417d0d3d3d31113d5d397d411549253d160721b600080516020611dd0833981519152826040516109ec9190611d56565b60106020526000908152604090205460ff1681565b60116020526000908152604090205460ff1681565b600c54600e549091565b600b5481565b6002546001600160a01b031681565b6016602052600090815260409020546001600160a01b031681565b60186020526000908152604090205460ff1681565b6001546001600160a01b0316331461117d5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03919091166000908152601260205260409020805460ff1916911515919091179055565b6001546001600160a01b0316331480156111ca57506001600160a01b03811615155b6111e65760405162461bcd60e51b81526004016109a990611bd4565b600f5460ff16156112095760405162461bcd60e51b81526004016109a990611c64565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fad3f8fa73ce3985d027e4c3bbe1194701a23e635a746bcf73d8632f677ac388290600090a250565b6001546001600160a01b0316331461127d5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03919091166000908152601860205260409020805460ff1916911515919091179055565b60085481565b6001546001600160a01b031633146112d85760405162461bcd60e51b81526004016109a990611ce0565b80600d81905550745354414b45525f554e5354414b455f57494e444f5760581b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b0316331461133f5760405162461bcd60e51b81526004016109a990611ce0565b6127108110156113615760405162461bcd60e51b81526004016109a990611c8d565b806005819055507014d5d05417d3d55517d491545552549151607a1b600080516020611dd0833981519152826040516109ec9190611d56565b600c5481565b600e5481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031681565b6000546001600160a01b031633146114035760405162461bcd60e51b81526004016109a990611c01565b60018054336001600160a01b031991821681179092556000805490911681556040517fb7a4788848eba3319c766bdd6428c7d7a10e4cba4fd6ade9b79b7102b7099b369190a2565b6003546001600160a01b031681565b6001546001600160a01b031633146114845760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03821660008181526013602052604090819020805460ff1916841515179055517fd2e6a599a52383178be9bf2d0be60c96615b89f8d9cf6c680f06962aa73679fc906114d8908490611ba5565b60405180910390a25050565b6001546001600160a01b0316331461150e5760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b0381166115345760405162461bcd60e51b81526004016109a990611cba565b600080546001600160a01b0319166001600160a01b038316908117825560405190917f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def91a250565b6001546001600160a01b031633146115a65760405162461bcd60e51b81526004016109a990611ce0565b6115af81611825565b80600981905550704d41585f535741505f534c49505041474560781b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b031633146116125760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03928316600090815260156020908152604080832094861683529390529190912080546001600160a01b03191691909216179055565b6001546001600160a01b031633146116795760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b03831660009081526018602052604090205460ff16806116b857506001600160a01b03831660009081526017602052604090205460ff165b6116d45760405162461bcd60e51b81526004016109a990611d04565b6001600160a01b03928316600090815260196020908152604080832094909516825292909252919020805460ff1916911515919091179055565b6001546001600160a01b031633146117385760405162461bcd60e51b81526004016109a990611ce0565b80600b819055507514d51052d15497d0d3d3d31113d5d397d411549253d160521b600080516020611dd0833981519152826040516109ec9190611d56565b6001546001600160a01b031633146117a05760405162461bcd60e51b81526004016109a990611ce0565b6001600160a01b0381166117c65760405162461bcd60e51b81526004016109a990611cba565b600280546001600160a01b0319166001600160a01b0383161790556040516e48454c494f535f545245415355525960881b907f806b6f19dfa971f58fc9140115f19907b73e8336024786c79c2ffc56f6678ec1906109ec908490611b0b565b6127108111156118475760405162461bcd60e51b81526004016109a990611bb0565b50565b60008282018381101561095d5760405162461bcd60e51b81526004016109a990611c2d565b80356001600160a01b038116811461089457600080fd5b600060208284031215611897578081fd5b61095d838361186f565b600080604083850312156118b3578081fd5b6118bd848461186f565b91506118cc846020850161186f565b90509250929050565b6000806000606084860312156118e9578081fd5b6118f3858561186f565b9250611902856020860161186f565b9150611911856040860161186f565b90509250925092565b60008060006060848603121561192e578283fd5b833561193981611d9d565b9250602084013561194981611d9d565b9150604084013561195981611db2565b809150509250925092565b600080600060608486031215611978578283fd5b611982858561186f565b9250611991856020860161186f565b9150604084013561195981611dc0565b600080604083850312156119b3578182fd5b6119bd848461186f565b9150602083013580151581146119d1578182fd5b809150509250929050565b600080604083850312156119ee578182fd5b6119f8848461186f565b915060208301356119d181611dc0565b600060208284031215611a19578081fd5b813561095d81611db2565b600060208284031215611a35578081fd5b5051919050565b600060208284031215611a4d578081fd5b815167ffffffffffffffff80821115611a64578283fd5b81840185601f820112611a75578384fd5b8051925081831115611a85578384fd5b604051601f8401601f191681016020018381118282101715611aa5578586fd5b604052838152818401602001871015611abc578485fd5b611acd846020830160208501611d6d565b9695505050505050565b600060208284031215611ae8578081fd5b5035919050565b600060208284031215611b00578081fd5b815161095d81611dc0565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039290921682521515602082015260400190565b600060018060a01b0386168252846020830152608060408301528351806080840152611b878160a0850160208801611d6d565b921515606083015250601f91909101601f19160160a0019392505050565b901515815260200190565b6020808252600a908201526926a39d2821aa2fa7a7a160b11b604082015260600190565b60208082526013908201527226a39d2727aa2fa3a7ab2fa7a92fa0a226a4a760691b604082015260600190565b60208082526012908201527126a39d2727aa2fa822a72224a723afa3a7ab60711b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600f908201526e1351ce941493d513d7d4105554d151608a1b604082015260600190565b6020808252601390820152724d473a535741505f4f55545f544f4f5f4c4f5760681b604082015260600190565b6020808252600c908201526b26a39d2d22a927afa0a2222960a11b604082015260600190565b6020808252600a908201526926a39d2727aa2fa3a7ab60b11b604082015260600190565b60208082526012908201527126a39d24a72b20a624a22fa9aaa822a92fa360711b604082015260600190565b6020808252600c908201526b26a39d2727aa2fa0a226a4a760a11b604082015260600190565b90815260200190565b918252602082015260400190565b60005b83811015611d88578181015183820152602001611d70565b83811115611d97576000848401525b50505050565b6001600160a01b038116811461184757600080fd5b801515811461184757600080fd5b60ff8116811461184757600080fdfed8780a041c72589f51af8b3fade9cc8a466d00ecef64d45657dd6cdebf1ecf47a2646970667358221220187be69e5bf2a5ea344892fd29245a2dcdbca2b3d847ac8acb35af17024726b364736f6c634300060b0033",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptGovernor()": {
        "details": "Accept the Governor position. Only the Pending Governor can call this function.It emits a `GovernorAccepted` event."
      },
      "constructor": {
        "details": "Constructor function.It emits an `Initialized` event.",
        "params": {
          "_globalAdmin": "Address the Global Admin.",
          "_governor": "Address of Governor.",
          "_hls": "Address of the ERC-2222 Helios Token for the Helios protocol."
        }
      },
      "getLatestPrice(address)": {
        "details": "Fetch price for asset from Chainlink oracles.",
        "params": {
          "asset": "Asset to fetch price of."
        },
        "returns": {
          "_0": "Price of asset in USD."
        }
      },
      "getLpCooldownParams()": {
        "details": "Returns the `lpCooldownPeriod` and `lpWithdrawWindow` as a tuple, for convenience.",
        "returns": {
          "_0": "[0] = lpCooldownPeriod [1] = lpWithdrawWindow"
        }
      },
      "isValidCalc(address,uint8)": {
        "details": "Checks that a Calculator is valid.",
        "params": {
          "calc": "Calculator address.",
          "calcType": "Calculator type."
        }
      },
      "isValidSubFactory(address,address,uint8)": {
        "details": "Checks that a subFactory is valid as it relates to a super factory.",
        "params": {
          "factoryType": "The type expected for the subFactory. References listed below. 0 = COLLATERAL_LOCKER_FACTORY 1 = DEBT_LOCKER_FACTORY 2 = FUNDING_LOCKER_FACTORY 3 = LIQUIDITY_LOCKER_FACTORY 4 = STAKE_LOCKER_FACTORY",
          "subFactory": "The sub factory used by core factory (e.g. LiquidityLockerFactory).",
          "superFactory": "The core factory (e.g. PoolFactory, LoanFactory)."
        }
      },
      "setCalc(address,bool)": {
        "details": "Sets the validity of a calculator contract. Only the Governor can call this function.",
        "params": {
          "calc": "Calculator address.",
          "valid": "The new validity status of a Calculator."
        }
      },
      "setCollateralAsset(address,bool)": {
        "details": "Sets the validity of an asset for collateral. Only the Governor can call this function.It emits a `CollateralAssetSet` event.",
        "params": {
          "asset": "The asset to assign validity to.",
          "valid": "The new validity status of a Collateral Asset."
        }
      },
      "setDefaultGracePeriod(uint256)": {
        "details": "Sets the default grace period. Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "_defaultGracePeriod": "Number of seconds to set the grace period to."
        }
      },
      "setDefaultUniswapPath(address,address,address)": {
        "details": "Sets the path to swap an asset through Uniswap. Only the Governor can call this function.",
        "params": {
          "from": "Asset being swapped.",
          "mid": "Middle asset.** Set to == mid to enable a bilateral swap (single path swap). Set to != mid to enable a triangular swap (multi path swap).",
          "to": "Final asset to receive. **"
        }
      },
      "setFundingPeriod(uint256)": {
        "details": "Sets the funding period. Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "_fundingPeriod": "Number of seconds to set the drawdown grace period to."
        }
      },
      "setGlobalAdmin(address)": {
        "details": "Sets the Global Admin. Only the Governor can call this function.It emits a `GlobalAdminSet` event.",
        "params": {
          "newGlobalAdmin": "New global admin address."
        }
      },
      "setHeliosTreasury(address)": {
        "details": "Sets the HeliosTreasury. Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "_heliosTreasury": "New HeliosTreasury address."
        }
      },
      "setInvestorFee(uint256)": {
        "details": "Sets the investor fee (in basis points). Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "_fee": "The fee, e.g., 50 = 0.50%."
        }
      },
      "setLiquidityAsset(address,bool)": {
        "details": "Sets the validity of an asset for liquidity in Pools. Only the Governor can call this function.It emits a `LiquidityAssetSet` event.",
        "params": {
          "asset": "Address of the valid asset.",
          "valid": "The new validity status a Liquidity Asset in Pools."
        }
      },
      "setLpCooldownPeriod(uint256)": {
        "details": "Sets the Liquidity Pool cooldown period. This change will affect the existing cool down period for the LPs that already intended to withdraw. Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "newCooldownPeriod": "New value for the cool down period."
        }
      },
      "setLpWithdrawWindow(uint256)": {
        "details": "Sets the Liquidity Pool withdraw window. This change will affect the existing window for the LPs that already intended to withdraw. Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "newLpWithdrawWindow": "New value for the withdraw window."
        }
      },
      "setMaxSwapSlippage(uint256)": {
        "details": "Sets the allowed Uniswap slippage percentage, in basis points. Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "newMaxSlippage": "New max slippage percentage (in basis points)"
        }
      },
      "setMinLoanEquity(uint256)": {
        "details": "Sets the minimum Loan equity. Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "_minLoanEquity": "Min percentage of Loan equity an account must have to trigger liquidations."
        }
      },
      "setPendingGovernor(address)": {
        "details": "Sets a new Pending Governor. This address can become Governor if they accept. Only the Governor can call this function.It emits a `PendingGovernorSet` event.",
        "params": {
          "_pendingGovernor": "Address of new Pending Governor."
        }
      },
      "setPoolDelegateAllowlist(address,bool)": {
        "details": "Sets the validity of a Pool Delegate (those allowed to create Pools). Only the Governor can call this function.It emits a `PoolDelegateSet` event.",
        "params": {
          "delegate": "Address to manage permissions for.",
          "valid": "The new validity status of a Pool Delegate."
        }
      },
      "setPriceOracle(address,address)": {
        "details": "Sets a price feed's oracle. Only the Governor can call this function.It emits a `OracleSet` event.",
        "params": {
          "asset": "Asset to update price for.",
          "oracle": "New oracle to use."
        }
      },
      "setProtocolPause(bool)": {
        "details": "Sets the paused/unpaused state of the protocol. Only the Global Admin can call this function.It emits a `ProtocolPaused` event.",
        "params": {
          "pause": "Boolean flag to switch externally facing functionality in the protocol on/off."
        }
      },
      "setStakerCooldownPeriod(uint256)": {
        "details": "Sets the Staker cooldown period. This change will affect the existing cool down period for the Stakers that already intended to unstake. Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "newCooldownPeriod": "New value for the cool down period."
        }
      },
      "setStakerUnstakeWindow(uint256)": {
        "details": "Sets the Staker unstake window. This change will affect the existing window for the Stakers that already intended to unstake. Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "newUnstakeWindow": "New value for the unstake window."
        }
      },
      "setSwapOutRequired(uint256)": {
        "details": "Sets the the minimum Pool cover required to finalize a Pool. Only the Governor can call this function. FIXIt emits a `GlobalsParamSet` event.",
        "params": {
          "amt": "The new minimum swap out required."
        }
      },
      "setTreasuryFee(uint256)": {
        "details": "Sets the treasury fee (in basis points). Only the Governor can call this function.It emits a `GlobalsParamSet` event.",
        "params": {
          "_fee": "The fee, e.g., 50 = 0.50%."
        }
      },
      "setValidBalancerPool(address,bool)": {
        "details": "Sets the validity of a Balancer Pool. Only the Governor can call this function.It emits a `BalancerPoolSet` event.",
        "params": {
          "balancerPool": "Address of Balancer Pool contract.",
          "valid": "The new validity status of a Balancer Pool."
        }
      },
      "setValidLoanFactory(address,bool)": {
        "details": "Sets the validity of a LoanFactory. Only the Governor can call this function.",
        "params": {
          "loanFactory": "Address of LoanFactory.",
          "valid": "The new validity status of a LoanFactory."
        }
      },
      "setValidPoolFactory(address,bool)": {
        "details": "Sets the validity of a PoolFactory. Only the Governor can call this function.",
        "params": {
          "poolFactory": "Address of PoolFactory.",
          "valid": "The new validity status of a PoolFactory."
        }
      },
      "setValidSubFactory(address,address,bool)": {
        "details": "Sets the validity of a sub factory as it relates to a super factory. Only the Governor can call this function.",
        "params": {
          "subFactory": "The sub factory used by core factory (e.g. LiquidityLockerFactory).",
          "superFactory": "The core factory (e.g. PoolFactory, LoanFactory).",
          "valid": "The new validity status of a subFactory within context of super factory."
        }
      }
    },
    "title": "HeliosGlobals maintains a central source of parameters and allowlists for the Helios protocol.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4375,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4377,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "governor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4379,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "heliosTreasury",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 4381,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "globalAdmin",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 4383,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "defaultGracePeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 4385,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "swapOutRequired",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 4387,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "fundingPeriod",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 4389,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "investorFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 4391,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "treasuryFee",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 4393,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "maxSwapSlippage",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 4395,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "minLoanEquity",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 4397,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "stakerCooldownPeriod",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 4399,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "lpCooldownPeriod",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 4401,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "stakerUnstakeWindow",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 4403,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "lpWithdrawWindow",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 4405,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "protocolPaused",
        "offset": 0,
        "slot": "15",
        "type": "t_bool"
      },
      {
        "astId": 4409,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "isValidLiquidityAsset",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4413,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "isValidCollateralAsset",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4417,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "validCalcs",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4421,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "isValidPoolDelegate",
        "offset": 0,
        "slot": "19",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4425,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "isValidBalancerPool",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4431,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "defaultUniswapPath",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
      },
      {
        "astId": 4435,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "oracleFor",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 4439,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "isValidPoolFactory",
        "offset": 0,
        "slot": "23",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4443,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "isValidLoanFactory",
        "offset": 0,
        "slot": "24",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4449,
        "contract": "packages/protocol/contracts/HeliosGlobals.sol:HeliosGlobals",
        "label": "validSubFactories",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
